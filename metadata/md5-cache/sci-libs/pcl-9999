DEFINED_PHASES=compile configure install prepare test unpack
DEPEND=>=sci-libs/flann-1.7.1 dev-libs/boost:=[threads] dev-cpp/eigen:3 opengl? ( virtual/opengl media-libs/freeglut ) openni? ( dev-libs/OpenNI ) openni2? ( dev-libs/OpenNI2 ) pcap? ( net-libs/libpcap ) png? ( media-libs/libpng:0= ) qhull? ( media-libs/qhull ) qt5? ( dev-qt/qtgui:5 dev-qt/qtcore:5 dev-qt/qtconcurrent:5 dev-qt/qtopengl:5 ) usb? ( virtual/libusb:1 ) vtk? ( >=sci-libs/vtk-5.6[imaging,rendering] ) cuda? ( >=dev-util/nvidia-cuda-toolkit-4 ) !!dev-cpp/metslib doc? ( app-doc/doxygen ) tutorials? ( dev-python/sphinx dev-python/sphinxcontrib-doxylink ) test? ( >=dev-cpp/gtest-1.6.0 ) virtual/pkgconfig >=dev-vcs/git-1.8.2.1 sys-devel/make >=dev-util/cmake-2.8.12
DESCRIPTION=2D/3D image and point cloud processing
EAPI=5
HOMEPAGE=http://pointclouds.org/
IUSE=cuda doc opengl openni openni2 pcap png +qhull qt5 usb vtk cpu_flags_x86_sse test tutorials
LICENSE=BSD
RDEPEND=>=sci-libs/flann-1.7.1 dev-libs/boost:=[threads] dev-cpp/eigen:3 opengl? ( virtual/opengl media-libs/freeglut ) openni? ( dev-libs/OpenNI ) openni2? ( dev-libs/OpenNI2 ) pcap? ( net-libs/libpcap ) png? ( media-libs/libpng:0= ) qhull? ( media-libs/qhull ) qt5? ( dev-qt/qtgui:5 dev-qt/qtcore:5 dev-qt/qtconcurrent:5 dev-qt/qtopengl:5 ) usb? ( virtual/libusb:1 ) vtk? ( >=sci-libs/vtk-5.6[imaging,rendering] ) cuda? ( >=dev-util/nvidia-cuda-toolkit-4 )
REQUIRED_USE=openni? ( usb ) openni2? ( usb ) tutorials? ( doc )
SLOT=0/1.8
_eclasses_=cmake-utils	f3d38665b0a86e08ba3a5473cdbfafd3	eutils	b83a2420b796f7c6eff682679d08fe25	flag-o-matic	8632fcd33a047954f007dee9a137bdcc	git-r3	86ff3e88fc8a07b4f595afa27e416341	multilib	165fc17c38d1b11dac2008280dab6e80	toolchain-funcs	6198c04daba0e1307bd844df7d37f423	versionator	99ae9d758cbe7cfed19170e7d48f5a9c
_md5_=99c871f734d8de15f3bcc80142d978d8
