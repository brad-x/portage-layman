From 0a0bfecac11ec376263815f559e4b1b33ff6b4c3 Mon Sep 17 00:00:00 2001
From: "Markus (root)" <mo@wurzel.org>
Date: Thu, 21 Jul 2016 21:15:20 +0200
Subject: [PATCH] Make destructors public

---
 universe/Building.h | 2 +-
 universe/Field.h    | 2 +-
 universe/Fleet.h    | 2 +-
 universe/Planet.h   | 2 +-
 universe/Ship.h     | 2 +-
 universe/System.h   | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/universe/Building.h b/universe/Building.h
index 2cb59b0..dec0080 100644
--- a/universe/Building.h
+++ b/universe/Building.h
@@ -52,6 +52,7 @@ public:
 
     virtual void    ResetTargetMaxUnpairedMeters();
     //@}
+    ~Building() {}
 
 protected:
     friend class Universe;
@@ -68,7 +69,6 @@ protected:
 
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~Building() {}
 
     virtual Building*       Clone(int empire_id = ALL_EMPIRES) const;   ///< returns new copy of this Building
     //@}
diff --git a/universe/Field.h b/universe/Field.h
index 5b30bb3..f193710 100644
--- a/universe/Field.h
+++ b/universe/Field.h
@@ -39,6 +39,7 @@ public:
 
     virtual void                ResetTargetMaxUnpairedMeters();
     //@}
+    ~Field() {}
 
 protected:
     friend class Universe;
@@ -48,7 +49,6 @@ protected:
     
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~Field() {}
 
     virtual Field*              Clone(int empire_id = ALL_EMPIRES) const;   ///< returns new copy of this Field
     //@}
diff --git a/universe/Fleet.h b/universe/Fleet.h
index f133af0..ac602ac 100644
--- a/universe/Fleet.h
+++ b/universe/Fleet.h
@@ -129,6 +129,7 @@ public:
     static const int            ETA_NEVER;                                  ///< returned by ETA when fleet can't reach destination due to lack of route or inability to move
     static const int            ETA_UNKNOWN;                                ///< returned when ETA can't be determined
     static const int            ETA_OUT_OF_RANGE;                           ///< returned by ETA when fleet can't reach destination due to insufficient fuel capacity and lack of fleet resupply on route
+    ~Fleet() {}
 
 protected:
     friend class Universe;
@@ -150,7 +151,6 @@ protected:
 
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~Fleet() {}
 
     virtual Fleet*          Clone(int empire_id = ALL_EMPIRES) const;  ///< returns new copy of this Fleet
     //@}
diff --git a/universe/Planet.h b/universe/Planet.h
index cece39a..233d31f 100644
--- a/universe/Planet.h
+++ b/universe/Planet.h
@@ -176,6 +176,7 @@ public:
     //@}
 
     static int      TypeDifference(PlanetType type1, PlanetType type2);
+    ~Planet() {}
 
 protected:
     friend class Universe;
@@ -187,7 +188,6 @@ protected:
 
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~Planet() {}
 
     virtual Planet*         Clone(int empire_id = ALL_EMPIRES) const;  ///< returns new copy of this Planet
     //@}
diff --git a/universe/Ship.h b/universe/Ship.h
index 5e9eabb..76fac51 100644
--- a/universe/Ship.h
+++ b/universe/Ship.h
@@ -86,6 +86,7 @@ public:
 
     virtual void    ResetTargetMaxUnpairedMeters();
     //@}
+    ~Ship() {}
 
 protected:
     friend class Universe;
@@ -96,7 +97,6 @@ protected:
 
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~Ship() {}
 
     virtual Ship*   Clone(int empire_id = ALL_EMPIRES) const;   ///< returns new copy of this Ship
     //@}
diff --git a/universe/System.h b/universe/System.h
index c92fed4..471c27e 100644
--- a/universe/System.h
+++ b/universe/System.h
@@ -110,6 +110,7 @@ public:
 
     virtual void            ResetTargetMaxUnpairedMeters();
     //@}
+    ~System() {}
 
 protected:
     friend class Universe;
@@ -133,7 +134,6 @@ protected:
 
     template <class T> friend void boost::python::detail::value_destroyer<false>::execute(T const volatile* p);
     template <class T> friend void boost::checked_delete(T* x);
-    ~System() {}
 
     virtual System*         Clone(int empire_id = ALL_EMPIRES) const;   ///< returns new copy of this System
     //@}
-- 
2.9.2

