From 0a60c121addb1b850f52281d898bdf1e04d920ad Mon Sep 17 00:00:00 2001
From: Sebastian Pipping <sebastian@pipping.org>
Date: Sun, 16 Aug 2015 20:01:15 +0200
Subject: [PATCH] Port enblend-4.1.3-texinfo-5-upstream.patch to 4.1.1

---
 doc/Makefile.am      |   2 +-
 doc/auxmac.tex       |   7 ---
 doc/auxmac.texi      | 156 ---------------------------------------------------
 doc/bug-reports.texi |   2 +-
 doc/enblend.texi     |  34 +++++------
 doc/enfuse.texi      |  81 +++++++++++---------------
 6 files changed, 51 insertions(+), 231 deletions(-)

diff --git a/doc/Makefile.am b/doc/Makefile.am
index 22c7fbc..40bb394 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -46,7 +46,7 @@ AM_MAKEINFOHTMLFLAGS = @AM_MAKEINFOHTMLFLAGS@ \
                    -I $(top_builddir) -I $(srcdir) \
                    --css-include=@srcdir@/default.css \
                    $(MAKEINFOHTMLFLAGS)
-export TEXINPUTS=$(top_builddir):$(srcdir)
+export TEXINPUTS = .:$(top_builddir):$(srcdir):
 
 TEXI2DVI = texi2dvi $(TEXI2DVIFLAGS) $(EXTRATEXI2DVIFLAGS)
 
diff --git a/doc/auxmac.tex b/doc/auxmac.tex
index 812d58d..524830f 100644
--- a/doc/auxmac.tex
+++ b/doc/auxmac.tex
@@ -1,13 +1,6 @@
-\input thumbpdf.sty
-
-
 % Auxilliary Macros.
 %
 % Include this file before texinfo.tex!
 
 \def\mathit#1{\hbox{\it #1}}
 \def\mathrm#1{\ifmmode{\rm #1}\else #1\fi}
-
-% These definitions are required for older versions of texinfo.tex.
-\def\geq{\ifmmode \ge\else $\ge$\fi}
-\def\leq{\ifmmode \le\else $\le$\fi}
diff --git a/doc/auxmac.texi b/doc/auxmac.texi
index 98c679f..59520c3 100644
--- a/doc/auxmac.texi
+++ b/doc/auxmac.texi
@@ -2,16 +2,6 @@
 @c Macro Definitions
 @c
 
-@c redefined commands
-
-@c Get the spacing of dimensions right.
-@ifnottex
-@macro dmn{unit}
-@tie{}\unit\
-@end macro
-@end ifnottex
-
-
 @c extended commands
 
 @c Add a title to a DocBook element.
@@ -80,73 +70,6 @@ not displayed, because of lacking <acronym>SVG</acronym> and
 
 @c Operators
 
-@c Generate a nice representation of base^exponent.
-@macro power{base, exponent}
-@ifinfo
-\base\^\exponent\
-@end ifinfo
-@html
-\base\<sup>\exponent\</sup>
-@end html
-@tex
-$\base\^{\exponent\}$%
-@end tex
-@docbook
-\base\<superscript>\exponent\</superscript>
-@end docbook
-@end macro
-
-
-@macro classictimes
-@ifinfo
-x@c gobble following newline  -- The Tricks of a Texinfo Wizard.
-@end ifinfo
-@html
-&times;
-@end html
-@tex
-\\ifmmode\\times\\else$\\times$\\fi% gobble following newline  -- The Tricks of a TeX Wizard.
-@end tex
-@docbook
-&times;
-@end docbook
-@end macro
-
-
-@c Required for older versions of makeinfo.  The definition of @geq
-@c for TeX lives in auxmac.tex.
-@ifnottex
-@macro geq
-@ifinfo
->=@c
-@end ifinfo
-@html
-&ge;
-@end html
-@docbook
-&ge;
-@end docbook
-@end macro
-@end ifnottex
-
-
-@c Required for older versions of makeinfo.  The definition of @leq
-@c for TeX lives in auxmac.tex.
-@ifnottex
-@macro leq
-@ifinfo
-<=@c
-@end ifinfo
-@html
-&le;
-@end html
-@docbook
-&le;
-@end docbook
-@end macro
-@end ifnottex
-
-
 @macro plusminus
 @ifinfo
 +/-@c
@@ -163,62 +86,6 @@ x@c gobble following newline  -- The Tricks of a Texinfo Wizard.
 @end macro
 
 
-@c Special Characters
-
-@macro inlineomega
-@ifinfo
-@math{omega}@c
-@end ifinfo
-@html
-<mathinline xmlns="http://www.w3.org/1998/Math/MathML" display="inline">
-    <mi>&omega;</mi>
-</mathinline>
-@end html
-@tex
-$\\omega$%
-@end tex
-@docbook
-&omega;
-@end docbook
-@end macro
-
-
-@macro inlinesigma
-@ifinfo
-@math{sigma}@c
-@end ifinfo
-@html
-<mathinline xmlns="http://www.w3.org/1998/Math/MathML" display="inline">
-    <mi>&sigma;</mi>
-</mathinline>
-@end html
-@tex
-$\\sigma$%
-@end tex
-@docbook
-&sigma;
-@end docbook
-@end macro
-
-
-@macro inlinexi
-@ifinfo
-@math{xi}@c
-@end ifinfo
-@html
-<mathinline xmlns="http://www.w3.org/1998/Math/MathML" display="inline">
-    <mi>&xi;</mi>
-</mathinline>
-@end html
-@tex
-$\\xi$%
-@end tex
-@docbook
-&xi;
-@end docbook
-@end macro
-
-
 @c Text Fragments
 
 @macro mainpurpose
@@ -236,26 +103,3 @@ $\\xi$%
 @noindent
 @strong{Summary of influential options}
 @end macro
-
-
-@macro semilog{significant, exponent}
-@ifinfo
-\significant\*10^\exponent\@c
-@end ifinfo
-@html
-<math xmlns="http://www.w3.org/1998/Math/MathML" display="inline">
-    <mn>\significant\</mn>
-    <mo>&times;</mo>
-    <msup>
-        <mn>10</mn>
-        <mn>\exponent\</mn>
-    </msup>
-</math>
-@end html
-@tex
-\\ifmmode\significant\ \\times 10^{\exponent\}\\else$\significant\ \\times 10^{\exponent\}$\\fi%
-@end tex
-@docbook
-\significant\&times;10<superscript>\exponent\</superscript>
-@end docbook
-@end macro
diff --git a/doc/bug-reports.texi b/doc/bug-reports.texi
index 56f8196..82c7476 100644
--- a/doc/bug-reports.texi
+++ b/doc/bug-reports.texi
@@ -78,7 +78,7 @@ this by running it with the options @option{--version} and
 @item
 A complete set of input images that will reproduce the bug.  Strive
 for a minimal set of @emph{small}@footnote{Images of a size less than
-1500@classictimes{}1000 pixels qualify as small.} images.
+1500x1000 pixels qualify as small.} images.
 
 @item
 The type of machine you are using, and the operating system name and
diff --git a/doc/enblend.texi b/doc/enblend.texi
index 17b7c3d..a9a00e8 100644
--- a/doc/enblend.texi
+++ b/doc/enblend.texi
@@ -508,9 +508,9 @@ As a guideline, remember that each new level works on a linear scale
 twice as large as the previous one.  So, the zeroth layer, the
 original image, obviously defines the image at single-pixel scale, the
 first level works at two-pixel scale, and generally, the @math{n}-th
-level contains image data at @power{2, n}-pixel scale.  This is the
+level contains image data at 2^n-pixel scale.  This is the
 reason why an image of
-@math{width}@classictimes{}@/@math{height}@dmn{pixels} cannot be
+@math{width}x@/@math{height}@dmn{pixels} cannot be
 deconstructed into a pyramid of more than
 @ifinfo
 @display
@@ -1194,11 +1194,11 @@ For floating-point format, use
 
 @itemize
 @item
-Minimum normalized value: @semilog{1.2, -38}
+Minimum normalized value: 1.2e-38
 @item
-Epsilon: @semilog{1.2, -7}
+Epsilon: 1.2e-7
 @item
-Maximum finite value: @semilog{3.4, 38}
+Maximum finite value: 3.4e38
 @end itemize
 
 @c IEEE double: 64 bits, n = 53, k = 64 - n - 1 = 10
@@ -1210,11 +1210,11 @@ Maximum finite value: @semilog{3.4, 38}
 
 @itemize
 @item
-Minimum normalized value: @semilog{2.2, -308}
+Minimum normalized value: 2.2e-308
 @item
-Epsilon: @semilog{2.2, -16}
+Epsilon: 2.2e-16
 @item
-Maximum finite value: @semilog{1.8, 308}
+Maximum finite value: 1.8e308
 @end itemize
 @end table
 
@@ -1236,11 +1236,11 @@ floating-point numbers.
 
 @itemize
 @item
-Minimum normalized value: @semilog{9.3, -10}
+Minimum normalized value: 9.3e-10
 @item
-Epsilon: @semilog{2.0, -3}
+Epsilon: 2.0e-3
 @item
-Maximum finite value: @semilog{4.3, 9}
+Maximum finite value: 4.3e9
 @end itemize
 
 @item -f @var{WIDTH}x@var{HEIGHT}
@@ -1250,7 +1250,7 @@ Maximum finite value: @semilog{4.3, 9}
 @cindex canvas size
 @cindex size, canvas
 Ensure that the minimum ``canvas'' size of the output image is at
-least @var{WIDTH}@classictimes{}@/@var{HEIGHT}.  Optionally specify
+least @var{WIDTH}x@/@var{HEIGHT}.  Optionally specify
 the @var{XOFFSET} and @var{YOFFSET}, too.
 
 @pindex nona @r{(Hugin)}
@@ -1572,7 +1572,7 @@ If omitted @var{FACTOR} defaults to
 @value{src::default-coarseness-factor}, this means,
 option@tie{}@option{--coarse-mask} shrinks the overlapping
 @emph{areas} by a factor of
-@math{@value{src::default-coarseness-factor}@classictimes{}@/@value{src::default-coarseness-factor}}.
+@math{@value{src::default-coarseness-factor}x@/@value{src::default-coarseness-factor}}.
 With @var{FACTOR}@tie{}=@tie{}8 the total memory allocated during a
 run of Enblend shrinks approximately by 80% and the maximum amount of
 memory in use at a time is decreased to 60% (Enblend compiled with
@@ -2494,7 +2494,7 @@ option@tie{}@option{--visualize} to directly judge the effect.
 When using this option in conjunction with
 option@tie{}@code{--coarse-mask}=@/@var{FACTOR}, keep in mind that the
 smoothing occurs @emph{after} the overlap regions have been shrunken.
-Thus, blurring affects a @var{FACTOR}@classictimes{}@/@var{FACTOR}
+Thus, blurring affects a @var{FACTOR}x@/@var{FACTOR}
 times larger area in the original images.
 
 Valid range: @var{RADIUS} @geq{} @value{src::minimum-smooth-difference}.
@@ -2606,7 +2606,7 @@ of the image and the final seam-line
 @rimage{seam-line-visualization}
 
 @caption{Seam-line visualization of a simple overlap.  The
-853@classictimes{}238@dmn{pixel} image is shown at a magification of
+853x238@dmn{pixel} image is shown at a magification of
 100%.}
 
 @shortcaption{Seam-line visualization}
@@ -2618,7 +2618,7 @@ of the image and the final seam-line
 @rimage{seam-line-visualization, 15cm}
 
 @caption{Seam-line visualization of a simple overlap.  The
-853@classictimes{}238@dmn{pixel} image has been rescaled to a width of
+853x238@dmn{pixel} image has been rescaled to a width of
 approximately 15@dmn{cm}.}
 
 @shortcaption{Seam-line visualization}
@@ -2629,7 +2629,7 @@ approximately 15@dmn{cm}.}
 @float Figure,Figure:seam-line-visualization
 @rimage{seam-line-visualization, 15cm}
 
-@caption{Seam-line visualization of a simple overlap.  The 853@classictimes{}238@dmn{pixel} image has been rescaled to a width of approximately 15@dmn{cm}.}
+@caption{Seam-line visualization of a simple overlap.  The 853x238@dmn{pixel} image has been rescaled to a width of approximately 15@dmn{cm}.}
 
 @shortcaption{Seam-line visualization}
 @end float
diff --git a/doc/enfuse.texi b/doc/enfuse.texi
index 0dd8c23..59c1dfe 100644
--- a/doc/enfuse.texi
+++ b/doc/enfuse.texi
@@ -621,9 +621,9 @@ As a guideline, remember that each new level works on a linear scale
 twice as large as the previous one.  So, the zeroth layer, the
 original image, obviously defines the image at single-pixel scale, the
 first level works at two-pixel scale, and generally, the @math{n}-th
-level contains image data at @power{2, n}-pixel scale.  This is the
+level contains image data at 2^n-pixel scale.  This is the
 reason why an image of
-@math{width}@classictimes{}@/@math{height}@dmn{pixels} cannot be
+@math{width}x@/@math{height}@dmn{pixels} cannot be
 deconstructed into a pyramid of more than
 @ifinfo
 @display
@@ -1255,11 +1255,11 @@ For floating-point format, use
 
 @itemize
 @item
-Minimum normalized value: @semilog{1.2, -38}
+Minimum normalized value: 1.2e-38
 @item
-Epsilon: @semilog{1.2, -7}
+Epsilon: 1.2e-7
 @item
-Maximum finite value: @semilog{3.4, 38}
+Maximum finite value: 3.4e38
 @end itemize
 
 @c IEEE double: 64 bits, n = 53, k = 64 - n - 1 = 10
@@ -1271,11 +1271,11 @@ Maximum finite value: @semilog{3.4, 38}
 
 @itemize
 @item
-Minimum normalized value: @semilog{2.2, -308}
+Minimum normalized value: 2.2e-308
 @item
-Epsilon: @semilog{2.2, -16}
+Epsilon: 2.2e-16
 @item
-Maximum finite value: @semilog{1.8, 308}
+Maximum finite value: 1.8e308
 @end itemize
 @end table
 
@@ -1297,11 +1297,11 @@ floating-point numbers.
 
 @itemize
 @item
-Minimum normalized value: @semilog{9.3, -10}
+Minimum normalized value: 9.3e-10
 @item
-Epsilon: @semilog{2.0, -3}
+Epsilon: 2.0e-3
 @item
-Maximum finite value: @semilog{4.3, 9}
+Maximum finite value: 4.3e9
 @end itemize
 
 @item -f @var{WIDTH}x@var{HEIGHT}
@@ -1311,7 +1311,7 @@ Maximum finite value: @semilog{4.3, 9}
 @cindex canvas size
 @cindex size, canvas
 Ensure that the minimum ``canvas'' size of the output image is at
-least @var{WIDTH}@classictimes{}@/@var{HEIGHT}.  Optionally specify
+least @var{WIDTH}x@/@var{HEIGHT}.  Optionally specify
 the @var{XOFFSET} and @var{YOFFSET}, too.
 
 @pindex nona @r{(Hugin)}
@@ -1501,8 +1501,8 @@ A positive @var{LCE-SCALE} turns on local contrast enhancement
 @var{LCE-SCALE} is the radius of the Gaussian used in the enhancement
 step, @var{LCE-FACTOR} is the weight factor (``strength'').
 
-@var{enhanced} = (1 + @var{LCE-FACTOR}) @classictimes{} @var{original}
-@minus{} @var{LCE-FACTOR} @classictimes{} Gaussian@/Smooth(@var{original},
+@var{enhanced} = (1 + @var{LCE-FACTOR}) x @var{original}
+@minus{} @var{LCE-FACTOR} x Gaussian@/Smooth(@var{original},
 @var{LCE-SCALE}).
 
 @var{LCE-SCALE} defaults to @value{src::default-lce-scale} pixels and
@@ -1531,7 +1531,7 @@ left unchanged.  This effectively suppresses weak edges.
 @opindex --contrast-window-size
 
 Set the window @var{SIZE} for local contrast analysis.  The window
-will be a square of @var{SIZE}@classictimes{}@/@var{SIZE} pixels.  If
+will be a square of @var{SIZE}x@/@var{SIZE} pixels.  If
 given an even @var{SIZE}, Enfuse will automatically use the next odd
 number.
 
@@ -1585,7 +1585,7 @@ output image.
 @opindex --entropy-window-size
 
 Window @var{SIZE} for local entropy analysis.  The window will be a
-square of @var{SIZE}@classictimes{}@/@var{SIZE} pixels.
+square of @var{SIZE}x@/@var{SIZE} pixels.
 
 In the entropy calculation @var{SIZE} values of 3 to 7 yield an
 acceptable compromise of the locality of the information and the
@@ -2433,20 +2433,6 @@ where @math{x} runs from 1 to the common width of the images, @math{y}
 from 1 to the common height, and @math{i} from 1 to the number of
 input images@tie{}@math{n}.
 
-@macro equationW{}
-@ifnotdocbook
-@ifnottex
-(W)
-@end ifnottex
-@end ifnotdocbook
-@tex
-(W)%
-@end tex
-@docbook
-<xref linkend="equ:pixel-weighting-function"/>
-@end docbook
-@end macro
-
 Enfuse allows for weighting the contribution of each @math{P(i, x, y)}
 to the final @math{Q(x, y)}:
 @ifinfo
@@ -2454,7 +2440,7 @@ to the final @math{Q(x, y)}:
 @math{w(P(1, x, y)) * P(1, x, y) +
 ... +
 w(P(n, x, y)) * P(n, x, y)
---> Q(x, y),}@w{                                                  }@equationW{}
+--> Q(x, y),}
 @end display
 @end ifinfo
 @html
@@ -2520,9 +2506,6 @@ w(P(n, x, y)) * P(n, x, y)
                 <mi>y</mi>
             </mfenced>
         </mrow>
-        <mtext>,</mtext>
-        <mspace width="4em"/>
-        <mtext>@equationW{}</mtext>
     </mrow>
 </math>
 @end html
@@ -2530,7 +2513,7 @@ w(P(n, x, y)) * P(n, x, y)
 $$
     w(P(1, x, y)) P(1, x, y) + \ldots + w(P(n, x, y)) P(n, x, y)
     \rightarrow
-    Q(x, y),\hskip4em\hbox{@equationW{}}
+    Q(x, y)
 $$
 @end tex
 @docbook
@@ -2948,7 +2931,7 @@ contributes as much as its weight demands.  Of course the weights can
 be extreme, favoring only a few pixels or even only one pixel in the
 input stack.  Extremes are not typical, however.
 
-Equal weights are another extreme that turns @equationW{} into an
+Equal weights are another extreme that turns the equation into an
 arithmetic average.  This is why we sometimes speak of the ``averaging
 property'' of this weighting algorithm, like smoothing out noise.
 
@@ -2969,7 +2952,7 @@ Trouper'') weighting mode, where the pixel with the highest weight
 wins, this is, gets weight@tie{}one, and all other pixels get the
 weight of zero
 (@uref{http://@/en.wikipedia.org/@/wiki/@/The_@/Winner_@/Takes_@/It_@/All,,``The
-Winner Takes It All.''}).  With @option{--hard-mask} Equation@tie{}@equationW{}
+Winner Takes It All.''}).  With @option{--hard-mask} the equation
 becomes
 @ifinfo
 @display
@@ -3114,8 +3097,8 @@ where
 
 @noindent
 Note that this ``averaging'' scheme lacks the nice noise-reduction
-property of the weighted average@tie{}@equationW{}, because only a
-single input pixel contributes to the output.
+property of the weighted average, because only a single input pixel
+contributes to the output.
 
 
 @node Single Criterion Fusing
@@ -3562,7 +3545,7 @@ $$
 
 @noindent
 It associates a probability@tie{}@math{p} with each of the @math{n}
-different possible outcomes@tie{}@inlineomega{} of the random
+different possible outcomes@tie{}@math{omega} of the random
 variable@tie{}@math{X}.
 @cindex expectation value
 Based on @math{w}, we define the @dfn{expectation value} or ``First
@@ -4189,7 +4172,7 @@ $$
 @end docbook
 
 @noindent
-The parameter@tie{}@inlinesigma{}, the argument of
+The parameter@tie{}@math{sigma}, the argument of
 option@tie{}@option{--contrast-edge-scale}, is the length scale on which edges
 are detected by @math{g(x, y)}.  We apply the Laplacian operator in
 Cartesian coordinates
@@ -4401,7 +4384,7 @@ $$
 </informalequation>
 @end docbook
 
-where we have used the dimensionless distance@tie{}@inlinexi{} from
+where we have used the dimensionless distance@tie{}@math{xi} from
 the origin
 @ifinfo
 @display
@@ -4556,7 +4539,7 @@ $R = \sqrt{x^2 + y^2}$.
 @float Figure,Figure:laplacian-of-gaussian
 @vimage{laplacian-of-gaussian}
 
-@caption{Laplacian-of-Gaussian function for @inlinesigma{} = 0.5.}
+@caption{Laplacian-of-Gaussian function for @math{sigma} = 0.5.}
 
 @shortcaption{Laplacian-of-Gaussian}
 @end float
@@ -4656,10 +4639,10 @@ Experience has shown that neither the parameters @var{EDGESCALE} and
 @var{CURVATURE} nor the mode of operation (@acronym{SDev}-only,
 @acronym{LoG}-only, or a blend of both) scales to different image
 sizes.  In practice, this means that if you start with a set of
-reduced size images, say 2808@classictimes{}1872 pixels, carefully
+reduced size images, say 2808x1872 pixels, carefully
 optimize @var{EDGESCALE}, @var{CURVATURE} and so on, and find
 @acronym{LoG}-only the best mode, and then switch to the original
-resolution of 5616@classictimes{}3744 pixels, multiplying (or
+resolution of 5616x3744 pixels, multiplying (or
 dividing) the parameters by four and sticking to @acronym{LoG}-only
 might @emph{not} result in the best fused image.  For best quality,
 perform the parameter optimization and the search for the most
@@ -5080,9 +5063,9 @@ centers around the image effects.
 Images should align well to be suitable for fusion.  However, there is
 no hard mathematical rule what ``well'' means.  The alignment
 requirements for 16@dmn{MPixel} images to yield a sharp
-4"@classictimes{}6" print at 300@dmn{dpi} (``dpi'' means dots per
+4"x6" print at 300@dmn{dpi} (``dpi'' means dots per
 inch) or even for web presentation are relatively low, whereas the
-alignment of 8@dmn{MPixel} images for a 12"@classictimes{}18" print
+alignment of 8@dmn{MPixel} images for a 12"x18" print
 ought to be tight.
 
 @pindex hugin
@@ -5548,7 +5531,7 @@ next section.
 
 Let us use an example to illustrate the problem of relating the
 sharpness with the local contrast variations.  Say we use a
-5@classictimes{}5 contrast window.  Moreover, let @code{sharp_edge}
+5x5 contrast window.  Moreover, let @code{sharp_edge}
 and @code{smooth_edge} be two specific configurations:
 
 @example
@@ -5727,7 +5710,7 @@ Use @acronym{LoG} to detect edges on a scale of 0.3@dmn{pixels}.
 Apply the default grayscale projector: @code{average} and throw away
 all edges with a curvature of less than 0.5% and replace the
 @acronym{LoG} data between 0% and 0.5% with @acronym{SDev} data.  Use
-a window of 7@classictimes{}7@dmn{pixel} window to compute the
+a window of 7x7@dmn{pixel} window to compute the
 @acronym{SDev}.
 @end table
 
-- 
2.5.0

